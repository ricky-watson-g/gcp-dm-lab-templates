{% set ZONE = "us-central1-b" %}
{% set REGION = "us-central1" %}

resources:
{# Delete default firewall rules and network #}
- name: default-allow-icmp-delete
  action: gcp-types/compute-v1:compute.firewalls.delete
  properties:
    firewall: default-allow-icmp
    project: {{ env["project"] }}
  metadata:
    runtimePolicy:
    - CREATE
- name: default-allow-ssh-delete
  action: gcp-types/compute-v1:compute.firewalls.delete
  properties:
    firewall: default-allow-ssh
    project: {{ env["project"] }}
  metadata:
    runtimePolicy:
    - CREATE
- name: default-allow-internal-delete
  action: gcp-types/compute-v1:compute.firewalls.delete
  properties:
    firewall: default-allow-internal
    project: {{ env["project"] }}
  metadata:
    runtimePolicy:
    - CREATE
- name: default-allow-rdp-delete
  action: gcp-types/compute-v1:compute.firewalls.delete
  properties:
    firewall: default-allow-rdp
    project: {{ env["project"] }}
  metadata:
    runtimePolicy:
    - CREATE
- name: default-network-delete
  action: gcp-types/compute-v1:compute.networks.delete
  properties:
    network: default
    project: {{ env["project"] }}
  metadata:
    runtimePolicy:
    - CREATE
    dependsOn:
    - default-allow-icmp-delete
    - default-allow-internal-delete
    - default-allow-ssh-delete
    - default-allow-rdp-delete


{# Enable service api #}
- name: iap-enable
  type: deploymentmanager.v2.virtual.enableService
  properties:
    consumerId: "project:{{ env['project'] }}"
    serviceName: iap.googleapis.com

{# Network #}
- name: acme-vpc
  type: gcp-types/compute-v1:networks
  properties:
    description: "Management VPC"
    autoCreateSubnetworks: false

{# Subnet #}
- name: acme-mgmt-subnet
  type: gcp-types/compute-v1:subnetworks
  properties:
    ipCidrRange: 192.168.10.0/24
    network: $(ref.acme-vpc.selfLink)
    region: {{ REGION }}
    privateIpGoogleAccess: true
    enableFlowLogs: true
    logConfig:
      enable: true
      flowSampling: 1

- name: acme-app-subnet
  type: gcp-types/compute-v1:subnetworks
  properties:
    ipCidrRange: 192.168.11.0/24
    network: $(ref.acme-vpc.selfLink)
    region: {{ REGION }}
    privateIpGoogleAccess: true
    enableFlowLogs: true
    logConfig:
      enable: true
      flowSampling: 1

{# Cloud Router/NAT #}
- name: acme-tools-rtr
  type: compute.v1.router
  properties:
    network: $(ref.acme-vpc.selfLink)
    region: {{ REGION }}
    nats:
    - name: acme-tools-nat
      sourceSubnetworkIpRangesToNat: LIST_OF_SUBNETWORKS
      subnetworks:
      - name: $(ref.acme-app-subnet.selfLink)
        sourceIpRangesToNat: 
        - PRIMARY_IP_RANGE
      - name: $(ref.acme-mgmt-subnet.selfLink)
        sourceIpRangesToNat: 
        - PRIMARY_IP_RANGE
      natIpAllocateOption: AUTO_ONLY

{# firewall rules #}
- name: fw-ssh-ingress
  type: gcp-types/compute-v1:firewalls
  properties:
    network: projects/{{ env['project'] }}/global/networks/acme-vpc
    sourceRanges: [35.235.240.0/20]
    priority: 100
    allowed:
    - IPProtocol: tcp
      ports: [22]
    targetTags:
    - ssh-ingress
  metadata:
    dependsOn: 
    - acme-vpc

- name: fw-bastion-ingress
  type: gcp-types/compute-v1:firewalls
  properties:
    network: projects/{{ env['project'] }}/global/networks/acme-vpc
    sourceRanges: [192.168.10.0/24]
    priority: 100
    allowed:
    - IPProtocol: tcp
      ports: [22]
    targetTags:
    - bastion-ingress
  metadata:
    dependsOn: 
    - acme-vpc

- name: fw-http-ingress
  type: gcp-types/compute-v1:firewalls
  properties:
    network: projects/{{ env['project'] }}/global/networks/acme-vpc
    sourceRanges: [192.168.10.0/24]
    priority: 100
    allowed:
    - IPProtocol: tcp
      ports: [80]
    targetTags:
    - http-ingress
  metadata:
    dependsOn: 
    - acme-vpc

{# Bastion #}
- name: bastion
  type: compute.v1.instance
  properties:
    zone: {{ ZONE }}
    machineType: projects/{{ env["project"] }}/zones/{{ ZONE }}/machineTypes/n1-standard-1
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: projects/debian-cloud/global/images/family/debian-9
    networkInterfaces:
    - subnetwork: regions/{{ REGION }}/subnetworks/acme-mgmt-subnet
    tags:
      items:
        - ssh-ingress
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash
          # stop the server?
          if [ -e "/root/foo" ]
          then
            echo its ok
          else 
            touch /root/foo
            poweroff
          fi
  metadata:
    dependsOn: 
    - acme-mgmt-subnet

- name: juice-shop
  type: compute.v1.instance
  properties:
    zone: {{ ZONE }}
    machineType: projects/{{ env["project"] }}/zones/{{ ZONE }}/machineTypes/n1-standard-1
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: projects/debian-cloud/global/images/family/debian-9
    networkInterfaces:
    - subnetwork: regions/{{ REGION }}/subnetworks/acme-app-subnet
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
    tags:
      items:
        - bastion-ingress
        - http-ingress
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash
          apt update
          curl -sL https://deb.nodesource.com/setup_12.x | sudo bash -
          apt install nodejs nginx -y
          cat > /etc/nginx/sites-enabled/default <<EOF
          server {
            listen 80;
            location / {
              proxy_pass         http://127.0.0.1:3000;
            }
          }
          EOF
          systemctl restart nginx
          cd /tmp
          wget https://github.com/bkimminich/juice-shop/releases/download/v9.3.1/juice-shop-9.3.1_node12_linux_x64.tgz
          tar -xzf juice-shop-9.3.1_node12_linux_x64.tgz
          cd juice-shop_9.3.1
          npm start
  metadata:
    dependsOn: 
    - acme-app-subnet
