resources:
{# Delete default firewall rules and network #}
- name: default-allow-icmp-delete
  action: gcp-types/compute-v1:compute.firewalls.delete
  properties:
    firewall: default-allow-icmp
    project: {{ env["project"] }}
  metadata:
    runtimePolicy:
    - CREATE
- name: default-allow-ssh-delete
  action: gcp-types/compute-v1:compute.firewalls.delete
  properties:
    firewall: default-allow-ssh
    project: {{ env["project"] }}
  metadata:
    runtimePolicy:
    - CREATE
- name: default-allow-internal-delete
  action: gcp-types/compute-v1:compute.firewalls.delete
  properties:
    firewall: default-allow-internal
    project: {{ env["project"] }}
  metadata:
    runtimePolicy:
    - CREATE
- name: default-allow-rdp-delete
  action: gcp-types/compute-v1:compute.firewalls.delete
  properties:
    firewall: default-allow-rdp
    project: {{ env["project"] }}
  metadata:
    runtimePolicy:
    - CREATE
- name: default-network-delete
  action: gcp-types/compute-v1:compute.networks.delete
  properties:
    network: default
    project: {{ env["project"] }}
  metadata:
    runtimePolicy:
    - CREATE
    dependsOn:
    - default-allow-icmp-delete
    - default-allow-internal-delete
    - default-allow-ssh-delete
    - default-allow-rdp-delete

{# Run the tf script #}
- name: execute-tf
  action: gcp-types/cloudbuild-v1:cloudbuild.projects.builds.create
  metadata:
    runtimePolicy:
    - UPDATE_ON_CHANGE
  properties:
    steps:
    - name: gcr.io/cloud-builders/git
      args:
      - clone
      - https://github.com/ricky-watson-g/terraform
    - name: 'ubuntu'
      args:
      - bash
      - -c
      - cp -r ./terraform/gcp/adv_peering_4fw_2spoke/* . && ls
    - name: 'ubuntu'
      args:
      - bash
      - -c
      - echo '{{ properties['keyFile'] }}' > sa.key
    - name: registry.hub.docker.com/gcptraining/ssh-keygen
      args:
      - -f
      - vm-creds 
      - -t
      - rsa
      - -C
      - vm-creds
      - -N 
      - "`date`"
    - name: 'ubuntu'
      args:
      - bash
      - -c
      - cat vm-creds && cat vm-creds.pub
    - name: registry.hub.docker.com/gcptraining/sed
      args:
      - -i
      - s/project-id/{{ env["project"] }}/g
      - terraform.tfvars
    - name: registry.hub.docker.com/gcptraining/terraform:test
      args:
      - init
    - name: registry.hub.docker.com/gcptraining/terraform:test
      args:
      - plan
    - name: registry.hub.docker.com/gcptraining/terraform:test
      args:
      - apply
      - --auto-approve
    timeout: 360s
  metadata:
    dependsOn:
    - default-network-delete
