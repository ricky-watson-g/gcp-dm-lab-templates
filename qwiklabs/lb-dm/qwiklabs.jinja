resources:
{# network items #}
- name: lab-network
  type: gcp-types/compute-v1:networks
  properties:
    autoCreateSubnetworks: false

- name: lab-network-subnet
  type: gcp-types/compute-v1:subnetworks
  properties:
    ipCidrRange: 10.128.16.0/20
    network: $(ref.lab-network.selfLink)
    region: us-central1

{# firewall items #}
- name: fw-health-check-rule
  type: gcp-types/compute-v1:firewalls
  properties:
    network: $(ref.lab-network.selfLink)
    sourceRanges: ["130.211.0.0/22", "35.191.0.0/16"]
    targetTags: [ "http-server" ]
    allowed:
    - IPProtocol: tcp
      ports: [ '3000' ]

- name: fw-http-server-rule
  type: gcp-types/compute-v1:firewalls
  properties:
    network: $(ref.lab-network.selfLink)
    sourceRanges: ["0.0.0.0/0"]
    targetTags: [ "http-server" ]
    allowed:
    - IPProtocol: tcp
      ports: ['22', '3000' ]


{# instance items #}
- name: lab-instance-template
  type: gcp-types/compute-v1:instanceTemplates
  properties:
    project: {{ env["project"] }}
    properties:
      machineType: n1-standard-1
      tags:
        items: [ "http-server" ]
      disks:
      - deviceName: boot
        boot: true
        type: PERSISTENT
        autoDelete: true
        mode: READ_WRITE
        initializeParams:
          diskName: template-disk
          sourceImage: projects/cos-cloud/global/images/family/cos-stable
      networkInterfaces:
      - subnetwork: $(ref.lab-network-subnet.selfLink)
        accessConfigs:
        - name: External-IP
          type: ONE_TO_ONE_NAT
      metadata:
        items:
        - key: gce-container-declaration
          value: |
            apiVersion: v1
            kind: Pod
            metadata:
              name: juice-shop
            spec:
              containers:
                - name: juice-shop
                  image: docker.io/bkimminich/juice-shop
                  imagePullPolicy: Always
                  ports:
                    - containerPort: 3000
                      hostPort: 80

- name: lab-instance-group-manager
  type: gcp-types/compute-v1:instanceGroupManagers
  properties:
    region: us-central1
    zone: us-central1-a
    targetSize: 1
    baseInstanceName: lab-instance
    instanceTemplate: $(ref.lab-instance-template.selfLink)
    autoHealingPolicies:
    - healthCheck: $(ref.load-balancer-health-check.selfLink)
      actionType: RECREATE
    namedPorts:
    - name: juice-shop
      port: 3000

{# load balancer items #}
- name: load-balancer-health-check
  type: gcp-types/compute-v1:httpHealthChecks
  properties:
    port: 3000

- name: load-balancer-backend-service
  type: compute.v1.backendService
  properties:
    region: us-central1
    loadBalancingScheme: EXTERNAL
    healthChecks:
    - $(ref.load-balancer-health-check.selfLink)
    portName: juice-shop
    protocol: HTTP
    backends:
    - description: lab-backend-service
      group: $(ref.lab-instance-group-manager.instanceGroup)

- name: load-balancer
  type: compute.v1.urlMap
  properties:
    defaultService: $(ref.load-balancer-backend-service.selfLink)

- name: load-balancer-http-proxy
  type: compute.v1.targetHttpProxy
  properties:
    urlMap: $(ref.load-balancer.selfLink)

- name: load-balancer-forwarding-rule
  type: compute.v1.globalForwardingRule
  properties:
    IPAddress: $(ref.load-balancer-static-ip.selfLink)
    IPProtocol: TCP
    loadBalancingScheme: EXTERNAL
    portRange: '80-80'
    target: $(ref.load-balancer-http-proxy.selfLink)

- name: load-balancer-static-ip
  type: compute.v1.globalAddress

output:
- name: site
  value: http://$(res.)